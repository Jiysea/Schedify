@using Schedify.Data
@model EventFeedbacksViewModel

<div x-data="{ open: false }" class="relative w-60">
    <h3 class="text-xs text-zinc-500 font-semibold">Selected Event</h3>
    <button type="button" x-on:click="open = !open"
        class="w-full select-none duration-200 ease-in-out flex items-center justify-between gap-2 px-3 py-1 rounded-md border border-zinc-300 hover:bg-zinc-500 active:bg-zinc-600 text-zinc-500 hover:text-zinc-50 active:text-zinc-50">
        <span class="w-full text-left truncate text-xs font-medium ">@(Model.SelectedName ?? "None")</span>
        <svg class="size-3" xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor"
            viewBox="0 0 256 256">
            <path
                d="M216.49,104.49l-80,80a12,12,0,0,1-17,0l-80-80a12,12,0,0,1,17-17L128,159l71.51-71.52a12,12,0,0,1,17,17Z">
            </path>
        </svg>
    </button>

    <!-- Dropdown Menu -->
    <div x-cloak x-show="open" x-on:click.away="open = false"
        class="absolute bg-white border border-zinc-300 rounded-md mt-2 min-h-60 max-h-60 overflow-y-auto shadow-md w-full z-20">
        @if (Model.SelectedName != null)
        {
            @foreach (var evt in Model.Events)
            {
                <div x-on:click="open = false" hx-get="/organizer/select-feedback-event-dropdown/@evt.Id" hx-swap="none"
                    class="duration-200 ease-in-out px-4 py-2 hover:bg-zinc-100 cursor-pointer">
                    <span class="truncate text-xs">@evt.ShortName</span>
                </div>
            }
        }
        else
        {
            <div class="flex items-center justify-center size-full">
                No Events Found
            </div>
        }
    </div>
</div>